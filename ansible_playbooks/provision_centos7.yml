---
- hosts: all 
  tasks:
      - name: upgrade all packages
        yum: name=* state=latest
        tags: bootstrap

      - name: Install epel-release
        yum: pkg=epel-release state=installed update_cache=true  
        tags: bootstrap

      - name: Download syslog-ng repository
        get_url:
            url: https://copr.fedorainfracloud.org/coprs/czanik/syslog-ng310/repo/epel-7/czanik-syslog-ng310-epel-7.repo 
            dest: /etc/yum.repos.d/czanik-syslog-ng310-epel-7.repo
        tags: syslog    

      - name: Copy auditd configuration rules
        copy: src=files/auditd.rules dest=/etc/audit/rules.d owner=root group=root mode=0644
        tags: auditd

      - name: Restart auditd
        command: service auditd restart  # it has to be this way on this specific package
        tags: auditd

      - name: Uninstall rsyslog
        yum: pkg=rsyslog state=removed update_cache=true  
        tags: syslog

      - name: Install syslog-ng
        yum: pkg=syslog-ng state=installed update_cache=true
        tags: syslog      

      - name: Copy syslog-ng conf
        copy: src=files/syslog-ng.conf dest=/etc/syslog-ng owner=root group=root
        tags: syslog

      - name: Start syslog-ng
        service: name=syslog-ng state=started
        tags: syslog

      - name: Install development tools
        yum:
            name: "@Development tools"
            state: present   
        tags: bootstrap

      - name: Install additional utilities 
        yum: pkg={{item}} state=installed update_cache=true
        with_items:
            - vim
            - ncdu
            - bash-completion
            - bash-completion-extras  
            - tree
            - sysstat
            - iotop
            - siege
            - curl
            - wget
            - links
            - elinks
            - htop
            - lsof
            - tcpdump
            - nmap
            - git
            - rsync
        tags: utilities

      - name: Copy script to generate sysstat sar report
        copy: src=files/sar_report_daily.sh dest=/var/log/sysstat owner=root group=root mode=0700
        tags: sysstat

      - name: Override sysstat cronjob configuration
        copy: src=files/sysstat dest=/etc/cron.d/sysstat owner=root group=root mode=0600
        tags: sysstat

      - name: sysctl configuration (fs, kernel and net configuration for hardening)
        copy: src=files/hardening.conf dest=/etc/sysctl.d owner=root group=root
        tags: sysctl

      - name: Reboot machine
        command: shutdown -r +1 'Rebooting in 1 minute by order from ansible...' 
        tags: reboot

      - name: Waiting for the machine to come back 
        local_action: wait_for 
            host={{ ansible_default_ipv4.address }} 
            state=started 
            port=22 
            delay=90 
            timeout=300 
            connect_timeout=15 
            # waiting for the host to be back online, on port, 
            # don't check for delay seconds (1 minute from the shutdown 
            #                                parameter + 30 seconds for the 
            #                                machine to be up), 
            # timeout for something to happen on the machine, 
            # wait for connect_timeout seconds for a connection 
            # to happen before closing and retrying
        tags: reboot

      - name: Get sysctl configuration
        command: sysctl -a
        register: sysctl
        changed_when: False  # this make this task always run
        tags: sysctl

      - name: Print sysctl configuration
        debug: var=sysctl.stdout
        tags: sysctl

      - name: Add portainer init script
        copy: src=files/run_portainer.sh dest=/opt owner=root group=root mode=0777
        tags: docker

      - name: Install docker pkg requirements
        yum: pkg={{item}} state=installed update_cache=true
        with_items:
            - yum-utils
            - device-mapper-persistent-data
            - lvm2
        tags: docker 

      - name: Download docker-ce repository
        get_url:
            url: https://download.docker.com/linux/centos/docker-ce.repo 
            dest: /etc/yum.repos.d/docker-ce.repo
        tags: docker    

      - name: Install docker
        yum: pkg=docker-ce state=installed update_cache=true
        tags: docker

      - name: Start docker
        service: name=docker state=started
        tags: docker

      - name: Add docker config (logging driver and log format)
        copy: src=files/docker-daemon.json dest=/etc/docker/daemon.json owner=root group=root
        tags: docker

      - name: Restart docker
        service: name=docker state=restarted
        tags: docker

      - name: Run docker version
        command: docker version
        register: dockerversion
        changed_when: False  # this make this task always run
        tags: docker

      - name: Print docker version
        debug: var=dockerversion.stdout
        tags: docker

      - name: Run docker info
        command: docker info
        register: dockerinfo
        changed_when: False  # this make this task always run
        tags: docker

      - name: Print docker info
        debug: var=dockerinfo.stdout
        tags: docker

      - name: Start portainer
        command: bash /opt/run_portainer.sh
        tags: docker

      - name: Check portainer passwd
        command: /bin/cat /root/portainer.admin.passwd
        register: password  # record the command stdout to the "password" variable
        changed_when: False  # this make this task always run
        tags: docker

      - name: Print portainer passwd
        debug: var=password.stdout  # prints the value of the "password" variable
        tags: docker

      - name: Install python-pip
        yum: pkg=python-pip state=installed update_cache=true
        tags: docker

      - name: Install docker-compose
        pip: name=docker-compose    
        tags: docker

      - name: Install pyinotify  # requirement to fail2ban
        pip: name=pyinotify    
        tags: fail2ban

      - name: Install fail2ban
        yum: pkg=fail2ban state=installed update_cache=true
        tags: fail2ban

      - name: Add fail2ban config
        copy: src=files/jail.local dest=/etc/fail2ban owner=root group=root
        tags: fail2ban

      - name: Start fail2ban
        service: name=fail2ban state=started
        tags: fail2ban

      - name: Authorize the ssh key from this ansible host to the root user.
        authorized_key:
            user: root
            state: present
            key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
        tags: auth

      - name: Create user
        user: name=dev 
              shell=/bin/bash 
              home=/home/dev 
              groups=docker,users,input 
              generate_ssh_key=yes 
              ssh_key_bits=2048
        tags: auth

      - name: Get ssh public key
        command: /bin/cat /home/dev/.ssh/id_rsa.pub
        register: cat
        changed_when: False
        tags: auth

      - name: Print ssh public key
        debug: var=cat.stdout
        tags: auth      

      - name: Authorize the ssh key from this ansible host to the dev user.
        authorized_key:
            user: dev
            state: present
            key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
        tags: auth

      - name: Set user sudo without password
        copy: src=files/sudoers dest=/etc owner=root group=root mode=0440
        tags: auth

      - name: Set sshd configuration only with keys without password
        copy: src=files/sshd_config dest=/etc/ssh owner=root group=root mode=0600
        tags: auth

      - name: Restart sshd
        service: name=sshd state=restarted
        tags: auth

      - name: Download recent tmux
        become_user: dev
        get_url:
            url: https://raw.githubusercontent.com/tiagoprn/bin_public/master/install_tmux_on_home_folder.sh
            dest: /home/dev/install_tmux.sh
            mode: 0500
        tags: tmux    

      - name: Install downloaded tmux
        become_user: dev
        command: /bin/bash /home/dev/install_tmux.sh
        tags: tmux      

      - name: Set timezone
        command: "{{item}}" 
        with_items:  # this is the only way to run more than one command with the ansible "command" module
            - timedatectl set-timezone America/Sao_Paulo
            - timedatectl  
        tags: timezone      

      - name: Install ntp
        yum: pkg={{item}} state=installed update_cache=true
        with_items:
            - ntp
            - ntpdate
        tags: ntp

      - name: Copy ntp configuration
        copy: src=files/ntp.conf dest=/etc owner=root group=root mode=0644
        tags: ntp

      - name: Start ntp
        service: name=ntpd state=started
        tags: ntp

      - name: Clone dot_files
        become_user: dev
        git:
            repo: 'https://github.com/tiagoprn/dot_files.git'
            dest: /home/dev/dot_files
        tags: dotfiles

      - name: link bashrc
        become_user: dev
        command: "{{item}}" 
        with_items:
            - mv .bashrc .bashrc.OLD
            - ln -s /home/dev/dot_files/.bashrc /home/dev/.bashrc
        tags: dotfiles

      - name: Copy tmux configuration script
        become_user: dev
        copy: src=files/configure_tmux.sh dest=/home/dev/local/bin owner=dev group=dev mode=0777
        tags: conftmux

      - name: Run tmux configuration script
        become_user: dev
        command: /home/dev/local/bin/configure_tmux.sh
        tags: conftmux

      - name: Copy vim configuration script
        become_user: dev
        copy: src=files/configure_vim.sh dest=/home/dev/local/bin owner=dev group=dev mode=0777
        tags: confvim

      - name: Run vim configuration script
        become_user: dev
        command: /home/dev/local/bin/configure_vim.sh
        tags: confvim

      - name: Enable all services 
        service: name={{item}} enabled=yes
        with_items:
            - docker 
            - fail2ban
            - syslog-ng
            - sshd
            - ntpd
            - auditd  
        tags: services

      - name: Remove downloaded yum packages
        command: yum clean all
        tags: cleanup

