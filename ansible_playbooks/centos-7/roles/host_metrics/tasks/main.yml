- name: Copy influxdb repository file 
  copy: src=files/influxdb.repo dest=/etc/yum.repos.d owner=root group=root mode=0644

- name: Copy grafana repository file 
  copy: src=files/grafana.repo dest=/etc/yum.repos.d owner=root group=root mode=0644

- name: Install collectd, influxdb and grafana 
  yum: pkg={{item}} state=installed update_cache=true
  with_items:
      - collectd
      - influxdb
      - grafana

- name: Configure collectd
  copy: src=files/collectd.conf dest=/etc owner=root group=root mode=0644

- name: Configure influxdb
  copy: src=files/influxdb.conf dest=/etc/influxdb owner=root group=root mode=0644

- name: download the script to generate a random password
  get_url:
    url: https://raw.githubusercontent.com/tiagoprn/devops/master/shellscripts/utils/random_password.sh 
    dest: /opt
    mode: 0744     

- name: Generate a random password for grafana admin user
  command: bash /opt/random_password.sh
  register: grafana_password  # record the command stdout to the "password" variable
  changed_when: False  # this make this task always run

- name: Print grafana admin user passwd
  debug: var=grafana_password.stdout  # prints the value of the "password" variable

- name: Download the script to generate the tls certificates
  get_url:
    url: https://raw.githubusercontent.com/tiagoprn/devops/master/shellscripts/utils/certificates/create-csr-and-private-key.sh
    dest: /opt
    mode: 0744     

- name: Generate the TLS certificates
  command: bash /opt/create-csr-and-private-key.sh -o /certificates/grafana

- name: Configure grafana
  template:
    src: grafana.ini.j2 
    dest: /etc/grafana/grafana.ini 
    owner: root 
    group: grafana 
    mode: 0640      
    backup: yes

- name: Start influxdb service, to be able to create an admin user
  systemd: name=influxdb daemon-reload=yes state=started enabled=yes
 
- name: Generate a random password for an influxdb admin user
  command: bash /opt/random_password.sh
  register: influx_password  # record the command stdout to the "password" variable
  changed_when: False  # this make this task always run

- name: Print influxdb admin user passwd
  debug: var=influx_password.stdout  # prints the value of the "password" variable

- name: Copy the influxdb password to a file
  copy: content="{{ influx_password.stdout }}" dest="/root/influxdb.admin.passwd"

- name: Create the admin user on influxdb
  command: influx -execute "CREATE USER admin WITH PASSWORD '{{ influx_password.stdout }}' WITH ALL PRIVILEGES"

- name: Validate the influxdb user was created on influxdb
  command: influx -username admin -password {{ influx_password.stdout }} -execute "SHOW USERS"  

- name: Create folder to hold the collectd vmstat plugin
  file:
    path: /usr/share/collectd/vmstat-collectd/
    state: directory
    mode: 0755
    group: root
    owner: root

- name: download collectd vmstat plugin to get metrics from vmstat
  get_url:
    url: https://raw.githubusercontent.com/signalfx/vmstat-collectd/master/vmstat_collectd.py
    dest: /usr/share/collectd/vmstat-collectd/
    mode: 0744     

- name: download collectd vmstat plugin default configuration
  get_url:
    url: https://raw.githubusercontent.com/signalfx/integrations/master/collectd-vmstat/10-vmstat.conf 
    dest: /etc/collectd.d/
    mode: 0755

- name: Copy SElinux policy to allow the collectd python plugin to work
  copy: src=files/cgp.pp dest=/etc owner=root group=root mode=0640

- name: Enable the SELinux policy for the collectd python plugin to work  
  command: semodule -i /etc/cgp.pp

