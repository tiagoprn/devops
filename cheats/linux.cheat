% linux

# create a user
sudo useradd -s /bin/bash -d /home/<username>/ -m -G sudo <username> && sudo passwd <username>

# add user to a group:
sudo usermod -aG <groups> <username>

# list current user groups:
id -nG

# get user id
id -u

# get user group id
id -g

# figlet
echo "$(hostname)" | figlet -cptk

# do not show blank lines on output
grep '\S'

# tee: redirect command output (stdout and stderr) to file or another command. Better than '>' or '>>'
<command> |& tee -a <file-or-command>

# system information - list requisites
inxi --recommends

# system information summary
inxi -F -A -I -u

# detailed system information
sudo inxi -b -A -C -f -D -n -G -l -M -r -P -I -S -d -f -i -m -o -s -u

# top x processes by cpu
inxi -t c<number>

# top x processes by memory
inxi -t m<number>

# gpg crypt
gpg -r <key-id> -se <file>

# gpg decrypt
gpg --decrypt <file> > <file>.decrypted && echo -e '\n --- \nDecrypted as "<file>.decrypted"\n'

# run indefinitely/infinitely in a loop
while :; do sleep 59; echo -n ' ' >&2; done &

# list partitions mountpoint status
lsblk

# base64 encode
echo -n "<text>" | base64 -w 0

# base64 decode
echo -n "<encoded-text>" | base64 -d -w 0

# reclame cache memory on the SO (cache clean)
sudo -- bash -c 'sync && echo 3 > /proc/sys/vm/drop_caches'

# single program ps usage statistics (RSS=real physical memory, VSZ=real+virtual memory)
watch -n 1 ps -p $(ps aux | fzf | awk '{print $2}') -o pid,time,command,%cpu,%mem,stat,rss,vsz

# strace on a process
sudo strace -p $(ps aux | fzf | awk '{print $2}')

# friendly strace on a process
sudo strace -fe trace=creat,open,openat,unlink,unlinkat -p $(ps aux | fzf | awk '{print $2}')

# list active kernel modules and their description
lsmod | perl -nE 'BEGIN{ <> }; ($m) = /(\S+)/; printf "%-20s: %s\n", $m, qx/modinfo $m/ =~ /description:\s*(.*)/' | sort

# ttyclock
tty-clock -b -c -s -f '%A, %d %B %Y'

# grep by regex. E.g. regex to get ip addresses: ([0-9]{1,3}[\.]){3}[0-9]{1,3}
grep -E -o '<regex>'

# create a large file . E.g. for 1 GB: 1024000
dd if=/dev/zero of=<path-to-file> bs=1024 count=<size-in-bytes>

# interactively sudo kill a process
sudo ps aux | fzf | awk '{print $2}' | xargs sudo kill -9

# restart clippy
kill -9 $(pgrep python3 | grep clippy | awk '{print $1}') && /storage/src/devops/bin/clippy.py && tail -f /tmp/clippy.log
