% vim, nvim, neovim

# show version
nvim --version

# script initialization example 01
nvim <filename> +'normal!ggIztk'

# script initialization example 02 - opens file with the current time and a line below ready for editing
nvim +'normal Go' +'r!date' <file> +'normal!o-  '

# pipe command output to nvim
<command> | nvim -

# script initialization example 03 - run something before vimrc
nvim --cmd 'echo "This runs before .vimrc"' -c ':call UltiSnips#ListSnippets()' -c '<Esc>' -c ':q!'

# script initialization example 04 - automate plugin install
nvim +PluginInstall +qall

# generate list of mappings in a file
nvim +':redir! > <mappings-file>' +':silent verbose map' +':redir END' +':qa!'

# generate a file report of the startup time (useful to detect slow plugins on initialization)
nvim --startuptime <report-file-path>

# start with quickfix list populated with results from rg
nvim -q <(rg --vimgrep --ignore-case --hidden --follow '<rg-search-phase>') +copen

# lsp logs
tail -f ~/.local/state/nvim/lsp.log

# lsp null-ls (formatters, linters, etc...) logs
tail -f ~/.cache/nvim/null-ls.log | grep 'spawning command'

# Export mappings to file
nvim +"redir >> /tmp/mappings.txt" +"map" +"redir END" +"qa!"

# Export mappings to file (verbose)
nvim +"redir >> /tmp/mappings-verbose.txt" +"verbose map" +"redir END" +"qa!"

# Read harpoon.json (project navigation and marks)
cat ~/.local/share/nvim/harpoon.json

# zipped backup of nvim data (harpoon marks, telescope history, shada, etc...)
export NVIM_BACKUP_DIR="/tmp/nvim.backups/$(date +%Y%m%d-%H%M%S-%N)" && \
mkdir -p $NVIM_BACKUP_DIR && \
tar cfjv $NVIM_BACKUP_DIR/home_.local_share_nvim.tar.bz2 --exclude={rplugin\.vim,site} ~/.local/share/nvim && \
tar cfjv $NVIM_BACKUP_DIR/home_.local_state_nvim.tar.bz2 --exclude=\*log\* ~/.local/state/nvim && \
cd $NVIM_BACKUP_DIR && \
notify-send "Backup successfully finished at '$NVIM_BACKUP_DIR'" && \
ls -lha

# rsync backup of nvim data and others to engineering
/storage/src/iac/zenbook/popOS/shellscripts/rsync-to-engineering.sh

# List all plugins on plugins.lua
grep -E -o '"{1}.*/.*"{1}' /storage/src/dot_files/nvim/lua/plugins.lua

# Search/grep/select plugin on plugins.lua
grep -E -o '"{1}.*/.*"{1}' /storage/src/dot_files/nvim/lua/plugins.lua | fzf | sed 's/"//g' | cb

# Search/grep/select plugin on plugins.lua and copy its github repository
grep -E -o '"{1}.*/.*"{1}' /storage/src/dot_files/nvim/lua/plugins.lua | fzf | echo "https://github.com/$(sed 's/\"//g')" | cb
