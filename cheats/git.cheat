% git

# Get current branch
git branch | grep ^* | cut -d ' ' -f 2

# Copy current branch to clipboard
git branch | grep ^* | cut -d ' ' -f 2 | cb

# Get git repository root
git rev-parse --show-toplevel

# Go to git repository root
cd $(git rev-parse --show-toplevel)

# Unstage - removes file/directory from the staging area (before commiting)
git reset HEAD <file-or-directory>

# Get git repository remote url
cat $(git rev-parse --show-toplevel)/.git/config | grep url | cut -d "=" -f 2 | tr "\n" " "

# Copy git repository remote url to clipboard
cat $(git rev-parse --show-toplevel)/.git/config | grep url | cut -d "=" -f 2 | tr "\n" " " | cb

# Show files changed on current branch, comparing to another one
git diff --name-only <reference-branch>

# Show files changed on each commit
git files-changed

# Show rank of most changed files on repository
git rank

# Show branches, with the most recent one on top
git lb

# See all commits' changes on file (you may also pass more than one file)
git log <files-separated-by-spaces>

# See all commits' changes on file - detailed with diff between changes
git log --follow -p --stat -- <file>

# Show only merge commits:
git log --merges

# See summarized changes by author:
git shortlog --pretty=format:"%ar%n  %h - %s %n"

# See summarized changes by author on file (you may also pass more than one file)
git shortlog --pretty=format:"%ar%n  %h - %s %n" <files-separated-by-spaces>

# Fetch all tags
git fetch --all --tags

# Checkout tag into branch
git checkout tags/<tag> -b <branch-name>

# See merged branches
git branch --merged | egrep -v "(^\*|master|staging)"

# Delete merged branches
git branch --merged | egrep -v "(^\*|master|main|staging)" | xargs git branch -d

# get file contents from other branch
git show <branch>:<file-path> | vim - -c 'set syntax=<file-type>'

# get file contents from previous commit (e.g. file-type=python)
git show <commit-hash>:<file-path> | vim - -c 'set syntax=<file-type>'

# list local and remote branches
git branch -a

# list only remote branches
git branch -r

# Delete local branch
git branch -D <name>

# Delete remote branch
git push origin <name> -d

# Rename branch locally
git branch -m <current-name> <new-name>

# Rename remote branch
git push origin :<current-name> <new-name>

# Stash save
git stash save "<message>"

# Stash list
git stash list

# Stash pop
git stash pop <stash-item-hash>

# Interactively add parts (hunks) of changes
git add -p

# Use a commit from one branch on another
git cherry-pick <commit-from-anywhere-on-your-repo>

# Apply global gitignore file
git config --global core.excludesfile ~/.gitignore.global

# Revert file/directory to previous commit
git checkout <commit-hash> -- <file-or-directory>


