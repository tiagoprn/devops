% kubectl, k8s, k3s

# Select pod name and copy to the clipboard
kubectl get pods -o wide -n <NAMESPACE> | fzf --no-sort | awk '{print $1}' | xclip -i -selection clipboard

# Get pods on namespace
watch -n 1 kubectl get pods -o wide -n <NAMESPACE>

# See resources being used by all nodes
watch -n 1 kubectl top nodes

# See resources being used by all pods in all namespaces
watch -n 1 kubectl top pods -A

# Describe pod on namespace
kubectl describe pod <POD> -n <NAMESPACE>

# See resources being used by a pod
watch -n 1 kubectl top pod <POD> -n <NAMESPACE>

# See resources being used by a pod, by container
watch -n 1 kubectl top pod <POD> -n <NAMESPACE> --containers

# See real-time logs from all containers in a pod
kubectl logs <POD> -n <NAMESPACE> --all-containers -f

# See all real-time logs from specific container in a pod
kubectl logs <POD> -n <NAMESPACE> -c <CONTAINER_NAME> -f

# See real-time filtered logs from celery worker container in a pod
kubectl logs <POD> -n <NAMESPACE> -c <CONTAINER_NAME> -f | grep -v 'check_celery_is_up' | grep -v 'health-check'

# Get name of containers inside a pod
kubectl get pod <POD> -n <NAMESPACE> -o jsonpath='{.spec.containers[*].name}'

# Enter a shell inside a pod
kubectl exec -it <POD> --container <CONTAINER> -n <NAMESPACE> -- /bin/bash

# Delete a pod (useful for testing the resilience)
kubectl delete pods <POD> -n <NAMESPACE>

# Copy files from pod/container to local machine
kubectl cp --container=<CONTAINER> <NAMESPACE>/<POD>:<REMOTE_PATH> <LOCAL_PATH>

# Copy files from local machine to pod/container
kubectl cp <LOCAL_PATH> --container=<CONTAINER> <NAMESPACE>/<POD>:<REMOTE_PATH>

# Change a deployment (useful e.g. to change environment variables. This will change it and trigger a new one, killing the current one)
kubectl edit deployment -n <NAMESPACE>

# Describe a deployment
kubectl describe deployment -n <NAMESPACE>

# See all environment variables on pod
kubectl set env pods <POD> --list -n <NAMESPACE>

# Get current kubectl context
kubectl config current-context

# Change current kubectl context
kubectl config set-context <context>

# Get all events from a namespace
kubectl get events -n <NAMESPACE>

# Get nodes information
kubectl get nodes -o wide

# Get k3s kubectl access token
sudo cat /var/lib/rancher/k3s/server/node-token
