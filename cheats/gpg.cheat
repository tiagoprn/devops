% gnupg, gpg

# encrypt
gpg -r <key-id> -se <file>

# decrypt
gpg --decrypt <file> > <file>.decrypted && echo -e '\n --- \nDecrypted as "<file>.decrypted"\n'

# export public key
gpg --export -a <key-id>

# export private key
gpg --export-secret-key -a <key-id>

# batch encrypt all files in directory
find <directory_path> -type f -exec gpg -r <key-id> -se {} \;

# batch decrypt gpg files on current directory
echo "Make sure you are in the right directory before starting..." && sleep 3 && source /storage/src/dot_files/tiling-window-managers/scripts/batch_decrypt.sh

# quickly decrypt text file on gpg repo
FILE_TO_DECRYPT=$(find /storage/src/gpg -name "*.gpg" | fzf) && gpg --decrypt $FILE_TO_DECRYPT

# quickly decrypt binary file on gpg repo
FZF_FILE_TO_DECRYPT=$(find /storage/src/gpg -name "*.gpg" | fzf) && FZF_TMP_DECRYPTED_FILE=$(echo "/tmp/$(basename $FZF_FILE_TO_DECRYPT)" | sed 's/.gpg//g') && gpg --decrypt $FZF_FILE_TO_DECRYPT > $FZF_TMP_DECRYPTED_FILE && echo -e "\n\nFINISHED.\n\nDecrypted '$FZF_FILE_TO_DECRYPT' at '$FZF_TMP_DECRYPTED_FILE'.\n\nAfter done dealing with '$FZF_TMP_DECRYPTED_FILE', remember to delete it from the filesystem.\n\n"


