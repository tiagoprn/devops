% kvm, libvirt, qemu, qcow2, virsh

# Create and enable a storage pool
mkdir -p <path>  && sudo virsh pool-define-as <pool-name> dir - - - - <path> && sudo virsh pool-build <pool-name> && sudo virsh pool-start <pool-name> && sudo virsh pool-autostart <pool-name> && sudo virsh pool-list --all

# KVM environment information
sudo virsh version --daemon

# Show available storage pools
sudo virsh pool-list --all

# Stop a storage pool, release its' resources, remove its' directory and definition:
sudo virsh pool-destroy <pool-name> && sudo virsh pool-delete <pool-name> && sudo virsh pool-undefine <pool-name>

# Get running VMs
sudo virsh list --all

# Get running VMs (watch)
watch -n 1 sudo virsh list --all

# Remove VM (first you have to stop it)
sudo virsh undefine $(sudo virsh list --all | fzf | awk '{print $2}') --snapshots-metadata

# List all networks and their statuses
sudo virsh net-list --all

# Stop a network
sudo virsh net-destroy $(sudo virsh net-list --all | fzf | awk '{print $1}')

# Start a network
sudo virsh net-start $(sudo virsh net-list --all | fzf | awk '{print $1}')

# Get all IPs on a network (used by VMs)
sudo virsh net-dhcp-leases $(sudo virsh net-list --all | fzf | awk '{print $1}')

# Show VM info
sudo virsh download_fileminfo $(sudo virsh list --all | fzf | awk '{print $2}')

# Start a VM
sudo virsh start $(sudo virsh list --all | fzf | awk '{print $2}')

# Stop a VM
sudo virsh shutdown $(sudo virsh list --all | fzf | awk '{print $2}')

# Kill a VM (first it must be stopped)
sudo virsh destroy $(sudo virsh list --all | fzf | awk '{print $2}')

# Pause a VM
sudo virsh suspend $(sudo virsh list --all | fzf | awk '{print $2}')

# Resume a paused VM
sudo virsh resume $(sudo virsh list --all | fzf | awk '{print $2}')

# Enable VM on boot
sudo virsh autostart $(sudo virsh list --all | fzf | awk '{print $2}')

# Disable VM from boot
sudo virsh autostart $(sudo virsh list --all | fzf | awk '{print $2}') --disable

# Show VM network configuration (MAC address etc.)
sudo virsh domiflist $(sudo virsh list --all | fzf | awk '{print $2}')

# Info on qcow2/img disk
qemu-img info <disk-file>

# Info on qcow2/img disk (fdisk)
fdisk -l <disk-file>

# Resize disk. E.g.: sudo virsh blockresize /storage/kvm/storage_pools/ubuntu18/ubuntu18-qcow2 15G
sudo virsh blockresize <domain-name> <disk-file> <size>

# Create qcow2 disk (size e.g. 10G)
qemu-img create -f qcow2 <qcow2-disk-file> -o size=<size>,preallocation=metadata

# Convert image from qcow2 to img
qemu-img convert <qcow2-image> <img-image>

# Convert image from img to qcow2
qemu-img convert -f raw -O qcow2 <img-image> <qcow2-image>

# Configure port forwarding:
sudo vim /etc/libvirt/hooks/qemu

# desktop app
virt-manager &
