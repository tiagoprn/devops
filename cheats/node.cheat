% node, npm, nvm

# codex doc on node basics
bat /storage/src/codex/2-areas/coding/20250418-Fri-101858-local-node-versions-management.md

# nvm: get latest release available on github:
curl -s https://api.github.com/repos/nvm-sh/nvm/releases/latest | jq -r .tag_name

# nvm: install latest release (PROFILE is to not edit .bashrc, since I already have NVM_DIR setup there at the end)
PROFILE=/dev/null bash -c "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/$(curl -s https://api.github.com/repos/nvm-sh/nvm/releases/latest | jq -r .tag_name)/install.sh | bash"

# nvm: show version
nvm --version

# nvm: list available local node versions (verbose)
nvm ls

# nvm: list available local node versions (only the versions)
nvm ls --no-colors | grep -v 'N/A' | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+' | sort -u

# nvm: activate node environment on current project folder (must have a ".nvmrc" file there)
nvm use

# nvm: show default node version
nvm alias default

# nvm: activate default node version
nvm use default

# nvm: change default node version
nvm alias default $(nvm ls --no-colors | grep -v 'N/A' | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+' | sort -u | fzf | sed 's/v//g')

# nvm: activate local node version (with fzf)
nvm use $(nvm ls --no-colors | grep -v 'N/A' | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+' | sort -u | fzf | sed 's/v//g')

# node/npm/npx: show active node version details
clear \
	&& echo "Active node version: $(nvm current)" \
	&& echo "Active node path: $(which node)" \
	&& echo "npm version: $(npm --version)" \
	&& echo "npx version: $(npx --version)";

# nvm: install a specific node version
nvm install $(nvm ls-remote | fzf --exact --prompt 'select version: ' | awk '{print $1}' | sed 's/v//g')

# nvm: install a specific node version (only Latest LTS versions)
nvm install $(nvm ls-remote | grep 'Latest LTS' | fzf --exact --prompt 'select version: ' | awk '{print $1}' | sed 's/v//g')

# nvm: remove, delete, or uninstall - just remove the local folder
rm -fr $NVM_DIR

# nvm: show path of the cache dir
nvm cache dir

# nvm: list contents of the cache dir
ls -lha $(nvm cache dir)/*

# nvm: clear cache dir
nvm cache clear

# npx: run tool on ephemeral environment
npx <@package-name> <command>

# npm: install a package on YOUR PROJECT's dir (under `node_modules`)
npm install <package-name>

# npm: install a package on the GLOBAL SPACE FOR THE ACTIVE NODE VERSION (check your current node version first)
npm install -g <package-name>

# node: current version
node --version && which node
