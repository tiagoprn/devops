- name: Print destination
  debug: var=destination

- name: Print network_ip_address
  debug: var=network_ip_address

- name: Add wireguard repository
  apt_repository:
      repo: ppa:wireguard/wireguard

- name: Install wireguard
  action: >
      {{ ansible_pkg_mgr }} name=wireguard state=present update_cache=yes

- name: Generate keys
  shell: |
      wg genkey | tee /etc/wireguard/privatekey | wg pubkey | tee /etc/wireguard/publickey
      chmod 600 /etc/wireguard/privatekey

- name: Get current public network interface
  shell: ip -o -4 route show to default | awk '{print $5}'
  register: default_iface
  changed_when: False  # this make this task always run

- name: Print default_iface
  debug: var=default_iface.stdout

- name: Get private key value
  shell: cat /etc/wireguard/privatekey
  register: key
  changed_when: False  # this make this task always run

- name: Print key
  debug: var=key.stdout

- name: Create the vpn configuration
  template:
    src: wg0.conf.j2
    dest: /etc/wireguard/wg0.conf
    owner: root
    group: root
    mode: 0600
    backup: yes

- name: Exclude NetworkManager from managing the wireguard interface
  copy: src=files/unmanaged.conf dest=/etc/NetworkManager/conf.d owner=root group=root mode=0600

# - name: Bring wg0 interface up
#   shell: wg-quick up wg0

- name: Enable and start wireguard interface
  systemd: name=wg-quick@wg0 daemon-reload=yes state=started enabled=yes

- name: Check interface state and configuration
  shell: wg show wg0

- name: Generate file to verify it passed through this role
  lineinfile:
    dest: /var/log/wireguard_passed.txt
    line: "{{ ansible_date_time.iso8601 }}"
    state: present
    create: yes
    owner: root
    group: root
    mode: 0644

